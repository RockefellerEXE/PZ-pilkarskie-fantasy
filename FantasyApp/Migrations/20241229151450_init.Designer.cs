// <auto-generated />
using FantasyApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FantasyApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241229151450_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FantasyApp.Models.Druzyna", b =>
                {
                    b.Property<int>("DruzynaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DruzynaId"), 1L, 1);

                    b.Property<int>("Budzet")
                        .HasColumnType("int");

                    b.Property<string>("NazwaDruzyny")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.HasKey("DruzynaId");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("Druzyny");

                    b.HasData(
                        new
                        {
                            DruzynaId = 1,
                            Budzet = 100,
                            NazwaDruzyny = "Drużyna A",
                            UzytkownikId = 1
                        },
                        new
                        {
                            DruzynaId = 2,
                            Budzet = 100,
                            NazwaDruzyny = "Drużyna B",
                            UzytkownikId = 2
                        },
                        new
                        {
                            DruzynaId = 3,
                            Budzet = 100,
                            NazwaDruzyny = "Drużyna C",
                            UzytkownikId = 3
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.Klub", b =>
                {
                    b.Property<int>("KlubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlubId"), 1L, 1);

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlubId");

                    b.ToTable("Kluby");

                    b.HasData(
                        new
                        {
                            KlubId = 1,
                            Nazwa = "FC Barcelona"
                        },
                        new
                        {
                            KlubId = 2,
                            Nazwa = "Real Madrid"
                        },
                        new
                        {
                            KlubId = 3,
                            Nazwa = "Manchester United"
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.SkladDruzyny", b =>
                {
                    b.Property<int>("DruzynaId")
                        .HasColumnType("int");

                    b.Property<int>("ZawodnikId")
                        .HasColumnType("int");

                    b.HasKey("DruzynaId", "ZawodnikId");

                    b.HasIndex("ZawodnikId");

                    b.ToTable("SkladDruzyny");

                    b.HasData(
                        new
                        {
                            DruzynaId = 1,
                            ZawodnikId = 1
                        },
                        new
                        {
                            DruzynaId = 1,
                            ZawodnikId = 3
                        },
                        new
                        {
                            DruzynaId = 2,
                            ZawodnikId = 2
                        },
                        new
                        {
                            DruzynaId = 2,
                            ZawodnikId = 4
                        },
                        new
                        {
                            DruzynaId = 3,
                            ZawodnikId = 5
                        },
                        new
                        {
                            DruzynaId = 3,
                            ZawodnikId = 7
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.StatystykiZawodnikow", b =>
                {
                    b.Property<int>("StatystykiZawodnikowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatystykiZawodnikowId"), 1L, 1);

                    b.Property<int>("Asysty")
                        .HasColumnType("int");

                    b.Property<int>("Bramki")
                        .HasColumnType("int");

                    b.Property<int>("CzerwoneKartki")
                        .HasColumnType("int");

                    b.Property<int>("DruzynaId")
                        .HasColumnType("int");

                    b.Property<int>("KarneSpowodowane")
                        .HasColumnType("int");

                    b.Property<int>("KarneWywalczone")
                        .HasColumnType("int");

                    b.Property<int>("KarneZmarnowane")
                        .HasColumnType("int");

                    b.Property<int>("Punkty")
                        .HasColumnType("int");

                    b.Property<int>("StrzalyObronione")
                        .HasColumnType("int");

                    b.Property<int>("ZawodnikId")
                        .HasColumnType("int");

                    b.Property<int>("ZolteKartki")
                        .HasColumnType("int");

                    b.HasKey("StatystykiZawodnikowId");

                    b.HasIndex("DruzynaId");

                    b.HasIndex("ZawodnikId");

                    b.ToTable("StatystykiZawodnikow");

                    b.HasData(
                        new
                        {
                            StatystykiZawodnikowId = 1,
                            Asysty = 1,
                            Bramki = 1,
                            CzerwoneKartki = 0,
                            DruzynaId = 1,
                            KarneSpowodowane = 0,
                            KarneWywalczone = 0,
                            KarneZmarnowane = 0,
                            Punkty = 5,
                            StrzalyObronione = 0,
                            ZawodnikId = 1,
                            ZolteKartki = 0
                        },
                        new
                        {
                            StatystykiZawodnikowId = 2,
                            Asysty = 1,
                            Bramki = 1,
                            CzerwoneKartki = 0,
                            DruzynaId = 2,
                            KarneSpowodowane = 0,
                            KarneWywalczone = 0,
                            KarneZmarnowane = 0,
                            Punkty = 5,
                            StrzalyObronione = 0,
                            ZawodnikId = 2,
                            ZolteKartki = 0
                        },
                        new
                        {
                            StatystykiZawodnikowId = 3,
                            Asysty = 1,
                            Bramki = 1,
                            CzerwoneKartki = 0,
                            DruzynaId = 1,
                            KarneSpowodowane = 0,
                            KarneWywalczone = 0,
                            KarneZmarnowane = 0,
                            Punkty = 5,
                            StrzalyObronione = 0,
                            ZawodnikId = 3,
                            ZolteKartki = 0
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.Transfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferId"), 1L, 1);

                    b.Property<int>("DruzynaId")
                        .HasColumnType("int");

                    b.Property<string>("TypTransferu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZawodnikId")
                        .HasColumnType("int");

                    b.HasKey("TransferId");

                    b.HasIndex("DruzynaId");

                    b.HasIndex("ZawodnikId");

                    b.ToTable("Transfery");

                    b.HasData(
                        new
                        {
                            TransferId = 1,
                            DruzynaId = 1,
                            TypTransferu = "Kupno",
                            ZawodnikId = 1
                        },
                        new
                        {
                            TransferId = 2,
                            DruzynaId = 1,
                            TypTransferu = "Kupno",
                            ZawodnikId = 3
                        },
                        new
                        {
                            TransferId = 3,
                            DruzynaId = 2,
                            TypTransferu = "Kupno",
                            ZawodnikId = 4
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.Uzytkownik", b =>
                {
                    b.Property<int>("UzytkownikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UzytkownikId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Punkty")
                        .HasColumnType("int");

                    b.HasKey("UzytkownikId");

                    b.ToTable("Uzytkownicy");

                    b.HasData(
                        new
                        {
                            UzytkownikId = 1,
                            Email = "user1@example.com",
                            Haslo = "password1",
                            Login = "user1",
                            Punkty = 0
                        },
                        new
                        {
                            UzytkownikId = 2,
                            Email = "user2@example.com",
                            Haslo = "password2",
                            Login = "user2",
                            Punkty = 0
                        },
                        new
                        {
                            UzytkownikId = 3,
                            Email = "user3@example.com",
                            Haslo = "password3",
                            Login = "user3",
                            Punkty = 0
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.Zawodnik", b =>
                {
                    b.Property<int>("ZawodnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZawodnikId"), 1L, 1);

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KlubId")
                        .HasColumnType("int");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pozycja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Punkty")
                        .HasColumnType("int");

                    b.HasKey("ZawodnikId");

                    b.HasIndex("KlubId");

                    b.ToTable("Zawodnicy");

                    b.HasData(
                        new
                        {
                            ZawodnikId = 1,
                            Cena = 50m,
                            Imie = "Marc",
                            KlubId = 1,
                            Nazwisko = "Ter Stegen",
                            Pozycja = "Bramkarz",
                            Punkty = 100
                        },
                        new
                        {
                            ZawodnikId = 2,
                            Cena = 55m,
                            Imie = "Thibaut",
                            KlubId = 2,
                            Nazwisko = "Courtois",
                            Pozycja = "Bramkarz",
                            Punkty = 95
                        },
                        new
                        {
                            ZawodnikId = 3,
                            Cena = 40m,
                            Imie = "Gerard",
                            KlubId = 1,
                            Nazwisko = "Pique",
                            Pozycja = "Obrońca",
                            Punkty = 80
                        },
                        new
                        {
                            ZawodnikId = 4,
                            Cena = 42m,
                            Imie = "David",
                            KlubId = 2,
                            Nazwisko = "Alaba",
                            Pozycja = "Obrońca",
                            Punkty = 85
                        },
                        new
                        {
                            ZawodnikId = 5,
                            Cena = 60m,
                            Imie = "Bruno",
                            KlubId = 3,
                            Nazwisko = "Fernandes",
                            Pozycja = "Pomocnik",
                            Punkty = 110
                        },
                        new
                        {
                            ZawodnikId = 6,
                            Cena = 55m,
                            Imie = "Pedri",
                            KlubId = 1,
                            Nazwisko = "Gonzalez",
                            Pozycja = "Pomocnik",
                            Punkty = 105
                        },
                        new
                        {
                            ZawodnikId = 7,
                            Cena = 70m,
                            Imie = "Marcus",
                            KlubId = 3,
                            Nazwisko = "Rashford",
                            Pozycja = "Napastnik",
                            Punkty = 120
                        },
                        new
                        {
                            ZawodnikId = 8,
                            Cena = 75m,
                            Imie = "Karim",
                            KlubId = 2,
                            Nazwisko = "Benzema",
                            Pozycja = "Napastnik",
                            Punkty = 130
                        });
                });

            modelBuilder.Entity("FantasyApp.Models.Druzyna", b =>
                {
                    b.HasOne("FantasyApp.Models.Uzytkownik", "Uzytkownik")
                        .WithMany("Druzyny")
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("FantasyApp.Models.SkladDruzyny", b =>
                {
                    b.HasOne("FantasyApp.Models.Druzyna", "Druzyna")
                        .WithMany("SkladDruzyny")
                        .HasForeignKey("DruzynaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasyApp.Models.Zawodnik", "Zawodnik")
                        .WithMany("SkladDruzyny")
                        .HasForeignKey("ZawodnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Druzyna");

                    b.Navigation("Zawodnik");
                });

            modelBuilder.Entity("FantasyApp.Models.StatystykiZawodnikow", b =>
                {
                    b.HasOne("FantasyApp.Models.Druzyna", "Druzyna")
                        .WithMany("Statystyki")
                        .HasForeignKey("DruzynaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasyApp.Models.Zawodnik", "Zawodnik")
                        .WithMany("Statystyki")
                        .HasForeignKey("ZawodnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Druzyna");

                    b.Navigation("Zawodnik");
                });

            modelBuilder.Entity("FantasyApp.Models.Transfer", b =>
                {
                    b.HasOne("FantasyApp.Models.Druzyna", "Druzyna")
                        .WithMany("Transfery")
                        .HasForeignKey("DruzynaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasyApp.Models.Zawodnik", "Zawodnik")
                        .WithMany("Transfery")
                        .HasForeignKey("ZawodnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Druzyna");

                    b.Navigation("Zawodnik");
                });

            modelBuilder.Entity("FantasyApp.Models.Zawodnik", b =>
                {
                    b.HasOne("FantasyApp.Models.Klub", "Klub")
                        .WithMany("Zawodnicy")
                        .HasForeignKey("KlubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klub");
                });

            modelBuilder.Entity("FantasyApp.Models.Druzyna", b =>
                {
                    b.Navigation("SkladDruzyny");

                    b.Navigation("Statystyki");

                    b.Navigation("Transfery");
                });

            modelBuilder.Entity("FantasyApp.Models.Klub", b =>
                {
                    b.Navigation("Zawodnicy");
                });

            modelBuilder.Entity("FantasyApp.Models.Uzytkownik", b =>
                {
                    b.Navigation("Druzyny");
                });

            modelBuilder.Entity("FantasyApp.Models.Zawodnik", b =>
                {
                    b.Navigation("SkladDruzyny");

                    b.Navigation("Statystyki");

                    b.Navigation("Transfery");
                });
#pragma warning restore 612, 618
        }
    }
}
